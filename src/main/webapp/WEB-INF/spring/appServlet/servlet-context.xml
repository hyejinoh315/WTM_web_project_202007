<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- 웹 리소스 위치에 대한 URL 맵핑 ("/webapp/하위") -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> log설정파일이 위치하는 폴더와 혼동할 수 있으므로 삭제함 -->
	<resources location="/WEB-INF/views/assets/" mapping="/assets/**"></resources>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 컨트롤러나 서비스의 구현체가 포함되어 있는 패키지들 나열 -->
	<context:component-scan base-package="com.spring.wtm.controllers" />
	<context:component-scan base-package="com.spring.wtm.service.impl" />
	
	<!-- 인터셉터 등록 -->
	<interceptors>
		<interceptor>
			<mapping path="/**"/> <!-- 인터셉터가 구동될 경로 (최상위 폴더) -->
			<beans:bean id="appInterceptor" class="com.spring.wtm.interceptor.AppInterceptor" />
		</interceptor>
	</interceptors>
	
	<!-- 스케쥴러 어노태이션 선언 -->
    <task:annotation-driven/>
    
    <!-- 스케쥴러로 동작할 객체 생성 -->
    <!-- 매일 자정마다 regDate기준 7일 지난 장바구니 삭제 스케쥴러 구현 -->
	<beans:bean id="scheduleJob" class="com.spring.wtm.scheduler.ShopScheduler" />
	<!-- 매일 자정마다 수정일시, 회원타입을 비교하여 3개월이 지난 회원의 정보를 삭제한다 -->
	<beans:bean id="memberScheduler" class="com.spring.wtm.scheduler.MemberScheduler" />
    
    <!-- 생성한 스케쥴러 객체에 대한 작업 스케쥴 지정 -->
     <task:scheduled-tasks>
   		<!-- 테스트: 30초마다 한 번씩 실행되는 작업 -->
    	<!-- <task:scheduled ref="scheduleJob" method="everySeconds" cron="0/30 * * * * ?"/> -->
    	<!-- 운영용: 매일 12:10am에 실행되는 작업: 장바구니 한달만 저장 구현 -->
    	<task:scheduled ref="scheduleJob" method="everyMidnight" cron="0 10 0 * * ?"/>
    	<!-- 매일 12:10am - 탈퇴한 회원 정보 삭제 -->
    	<task:scheduled ref="memberScheduler" method="dropMember" cron="0 10 0 * * ?"/>
    	<!-- 매 분 - 비밀번호 재발급 유효시간 update -->
    	<task:scheduled ref="memberScheduler" method="pwFind2" cron="0 0/1 * * * ?"/>
    </task:scheduled-tasks> 
     
</beans:beans>
