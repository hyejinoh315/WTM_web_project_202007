<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewMapper">
    <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
    <resultMap id="reviewMap" type="com.spring.wtm.model.Review">
        <!-- 리뷰 내용, IS NOT NULL -->
        <result property="content" column="content" />
        <!-- 등록일시, IS NOT NULL -->
        <result property="regDate" column="reg_date" />
        <!-- 리뷰 아이디, IS NOT NULL, PRI -->
        <result property="reviewId" column="review_id" />
        <!-- 병원 아이디(FK) -->
        <result property="hospitalHospitalId" column="hospital_hospital_id" />
        <!-- 멤버 아이디(FK) -->
        <result property="memberId" column="member_id" />
    </resultMap>

    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem" parameterType="com.spring.wtm.model.Review" resultMap="reviewMap">
        SELECT content, reg_date, review_id, member_id, hospital_hospital_id  
        FROM review 
        WHERE hospital_hospital_id=#{hospitalHospitalId}
    </select>

    <!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectList" parameterType="com.spring.wtm.model.Review" resultMap="reviewMap">
        SELECT content, reg_date, review_id, member_id, hospital_hospital_id 
        FROM review
        WHERE hospital_hospital_id=#{hospitalHospitalId}
        ORDER BY review_id DESC
        <if test="listCount > 0">
            LIMIT #{offset}, #{listCount}
        </if>
    </select>

	<!-- 다중행 조회를 위한 기능 정의(reserve.jsp - 병원별 리뷰 목록(5개까지만 보이기) -->
    <select id="selectList2" parameterType="com.spring.wtm.model.Review" resultMap="reviewMap">
        SELECT content, reg_date, review_id, member_id, hospital_hospital_id 
        FROM review
        WHERE hospital_hospital_id=#{hospitalHospitalId}
        ORDER BY review_id DESC
    </select>

    <!-- 데이터 수 조회를 위한 기능 정의 -->
    <select id="selectCountAll" parameterType="com.spring.wtm.model.Review" resultType="int">
        SELECT COUNT(*) FROM review
    </select>

    <!-- 데이터 저장을 위한 기능 정의 -->
    <insert id="insertItem" parameterType="com.spring.wtm.model.Review" useGeneratedKeys="true" keyProperty="review_id">
        INSERT INTO review (
            content, reg_date, hospital_hospital_id, member_id
        ) VALUES (
            #{content}, now(), #{hospitalHospitalId}, #{memberId}
        )
    </insert>

    <!-- 데이터 삭제를 위한 기능 정의 -->
    <delete id="deleteItem" parameterType="com.spring.wtm.model.Review">
        DELETE FROM review WHERE review_id=#{reviewId}
    </delete>

    <!-- 데이터 갱신을 위한 기능 정의 -->
    <update id="updateItem" parameterType="com.spring.wtm.model.Review">
        UPDATE review SET 
            content=#{content}
        WHERE review_id=#{reviewId}
    </update>

</mapper>
